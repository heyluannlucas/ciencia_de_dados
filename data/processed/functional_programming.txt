GitHub - lucasviola/awesome-functional-programming: :alien: A curated list of functional programming resources such as blog posts, communities, discussion topics, wikis and more. Skip to content  Documentation GitHub Skills Blog Solutions By company size Enterprises Small and medium teams Startups Nonprofits By use case DevSecOps DevOps CI/CD View all use cases By industry Healthcare Financial services Manufacturing Government View all industries View all solutions Resources Topics AI DevOps Security Software Development View all Explore Learning Pathways Events & Webinars Ebooks & Whitepapers Customer Stories Partners Executive Insights Open Source GitHub Sponsors Fund open source developers The ReadME Project GitHub community articles Repositories Topics Trending Collections Enterprise Enterprise platform AI-powered developer platform Available add-ons GitHub Advanced Security Enterprise-grade security features Copilot for business Enterprise-grade AI features Premium Support Enterprise-grade 24/7 support Pricing Search or jump to... Search code, repositories, users, issues, pull requests... Search Clear Search syntax tips Provide feedback We read every piece of feedback, and take your input very seriously. Include my email address so I can be contacted Cancel Submit feedback Saved searches Use saved searches to filter your results more quickly Name Query To see all available qualifiers, see our documentation. Cancel Create saved search Sign in Sign up Reseting focus You signed in with another tab or window. Reload to refresh your session. You signed out in another tab or window. Reload to refresh your session. You switched accounts on another tab or window. Reload to refresh your session. Dismiss alert lucasviola / awesome-functional-programming Public Notifications You must be signed in to change notification settings Fork 64 Star 977  A curated list of functional programming resources such as blog posts, communities, discussion topics, wikis and more. 977 stars 64 forks Branches Tags Activity Star Notifications You must be signed in to change notification settings Code Issues 0 Pull requests 0 Actions Projects 0 Wiki Security Insights Additional navigation options Code Issues Pull requests Actions Projects Wiki Security Insights lucasviola/awesome-functional-programming masterBranchesTagsGo to fileCodeFolders and filesNameNameLast commit messageLast commit dateLatest commit History128 Commitscontributing.mdcontributing.md readme.mdreadme.md View all filesRepository files navigationREADMEAwesome Functional Programming Based on the Awesome project What is this about? On the last decade, functional programming has gained a new found power due to its declarative characteristics which, some would say, are very effective for parallel computing and for the whole usage of Moores Law. This repo gathers some material on Functional Programming such as blog posts, papers, videos, tools, etc. and also aims to clarify some of the theoretical subjects behind it. Want to contribute? Please refer to this first. Table of Contents Blog Posts Papers Wikis Books Communities Discussions Videos Lectures Tools Repos People Blog posts Personal thoughts on the current functional programming bandwagon Despite the name, this post actually clarifies some baisc concepts on Functional Programming, explains some of the History of FP and the implementation of FPs features on imperative languages and talks about all the fuss on declarative programming and why it has become so popular in the last few years. A Monad in Practicality - Controlling Time A Monad in Practicality - First Class Failures How to desugar Haskell Code Functors, Applicatives, And Monads In Pictures Monads Made Difficult Your easy guide to Monads, Applicatives, & Functors Async Streams in C# How to leverage functional programming in Kotlin to write better, cleaner code Papers Tradeoffs between Unique Types and Monads The implementation of Functional Programming Languages - A paper by Simon Peyton Jones Sound and Decidable Type Inference for Functional Dependencies - Another very famous paper on Type Inference by the main creator of Haskell and GHC Template Meta-Programming for Haskell - Paper about generating code at compile-time in Haskell Why Functional Programming Matters From Higher-Order Logic to Haskell: There and Back Again Translating Haskell to Isabelle Wikis nLab - A wiki-lab with articles, discussion and tools from the point of view of category theory, which is the main math behind FP. Haskell/Category Theory - A good overview on Category Theory applied to Haskell from Wikibooks. Haskell Wiki Books Learn you a Haskell - Book, but you can read it online for free as well. Very beginner friendly. The Little Prover - Talks about a theorem prover called JBob for writing proofs in LISP. Isabelle/HOL - A Proof Assistant for Higher-Order Logic - A Book on implementing logical formalisms in Isabelle/HOL. The Little MLer - A book focused on teaching types, recursive thinking and other important subjects in Standard ML. Introduction to Programming using SML - Introduces you to programming design in a very mathematical way. How to Design Programs / Second Edition Introduction to Functional Programming Haskell in Depth - the perfect second book on Haskell which dives into examples and application scenarios designed to teach how Haskell works and how to apply it correctly. Grokking Simplicity: Taming complex software with functional thinking - Teaches functional programming from first principles using real-world scenarios. Functional Programming in Scala, Second Edition - International bestseller revised with new exercises, annotations, and full coverage of Scala 3. Functional Programming in C#, Second Edition - Real world examples and practical techniques for functional programming in C#. Grokking Functional Programming - Introduction to functional programming. Functional Programming in Kotlin - Master techniques and concepts of functional programming to deliver safer, simpler, and more effective Kotlin code. Functional Design and Architecture - Design patterns and architectures for building production quality applications using functional programming, with examples in Haskell and other FP languages. Haskell Bookcamp - In this book, youll get practical experience writing Haskell code and applying functional programming to actual development challenges. Mastering Functional Programming - If you are from an imperative and OOP background, this book will guide you through the world of functional programming, irrespective of which programming language you use. Jax in Action - A book about The JAX numerical computing library. Learn PowerShell Scritping in a Month of Lunches - Automate complex tasks and processes with PowerShell scripts. F# in Action - Book about practical F# development skills needed to create professional applications. Elixir in Action, Third Edition - Fully updated to Elixir 1.14, this authoritative bestseller reveals how Elixir tackles problems of scalability, fault tolerance, and high availability. Communities Lambda the Ultimate - Community focused on discussing researches, papers and hot topic on academia. Very high tech discussion level. FP Complete - Community focused on helping companies and students on learning and implementing Functional Programming in Haskell. Hosters of one of the most famous Haskell learning centers: School of Haskell Haskellers - The meeting point for Haskell Programmers ElixirLangMoscow - Russian Elixir community Discussions (Quora, Stack Overflow, Reddit, etc) Why dont more programmers use Haskell Hidden complexities of tail-call/tail-recursion optimization Videos Dont fear the Monad - Explanation on one of the most obscure topics of Functional Programming by Microsoft researcher Brian Beckman. Haskell is useless - Simon Peyton Jones being just too humble about his creation. Brian Beckman: The Zen of Stateless State Erik Meijer: Functional Programming Scala Monads: Declutter Your Code With Monadic Design Philip Wadler and Erik Meijer: On Programming Language Theory and Practice Kotlin for Android & Java Developers - LiveVideo course about Kotlin: functional programming, object orientation and building an Android app in Kotlin. Do we really need OOD and FDD? - Functional Declarative Design (FDD) opposed to Object-Oriented Design (OOD Functional Programming with TypeScript - Discover functional programming with Typescript and create a library like fp-ts alongside Sahand Javid in this beginner-friendly YouTube playlist. Lectures C9 Lectures: Dr. Erik Meijer - Functional Programming Fundamentals - Series of Lectures from one of the creators of Haskell Adventure with types in Haskell - Simon Peyton Jones - Lectures about Haskells strong Type System by Simon Peyton Jones. The Algebra of Algebraic Data Types - Very good explanation on the relationship between math and Algebraic Data Types, which is the Type System of some very common FP Languages such as Haskell and ML. Platforms [Paqmind.com]  Guides and challenges to learn and improve in programming. All content is CS and FP oriented. Tools Isabelle/HOL - Generic proof assistant based on Higher Order Logic Repos Idris Koans - Project for teaching Idris. A General Purpose Functional Programming with Dependent Types Functional Javascript Workshop - A functional Javascript workshop. J-Bob - The proof assistant from the book The Little Prover Haskell Must Watch - A list of videos, talks and courses on Haskell. Intro SML - Code, corrections and info on the book: Introduction to Programming using SML Functional Programming In JavaScript - List of functional programming resources in JavaScript. Functional Programming Jargon - Project for providing a glossary for FP, and make learning FP easier. Bow - Companion library for Typed Functional Programming in Swift. Parsing With Haskell Parser Combinators - A step-by-step guide to parsing using Haskell parser combinators. Functional Programming Learning Path - A Learning Path for Functional Programming People Simon Peyton Jones - One of the creators of the Haskell Language and the Glasgow Haskell Compiler. Microsoft Researcher. Philip Wadler - Professor of Theoretical Computer Science at the University of Edinburgh, author of the famous paper Propositions as Types. One of the main people behind Java Generics Types. Matthias Felleisen - Author of many books such as How to Design Programs, and The Little Schemer. Erik Meijer - Former software architect for Microsoft, Functional Programming researcher, gives lectures on FP, Software Design and Reactive programming. Brian Beckman - Former Microsoft Researcher, actual Software Engineer at Amazon. Contributed to implementing FP features to inumerous Microsoft technologies such as C#, LINQ and F# License To the extent possible under law, Lucas Viola has waived all copyright and related or neighboring rights to this work. About  A curated list of functional programming resources such as blog posts, communities, discussion topics, wikis and more. Resources Readme Activity Stars 977 stars Watchers 39 watching Forks 64 forks Report repository Releases No releases published Packages 0 No packages published Contributors 21 + 7 contributors Footer  2025 GitHub, Inc. Footer navigation Terms Privacy Security Status Docs Contact Manage cookies Do not share my personal information You cant perform that action at this time.