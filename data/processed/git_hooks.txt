GitHub - CompSciLauren/awesome-git-hooks: :anchor: A curated list of awesome git hooks Skip to content  Documentation GitHub Skills Blog Solutions By company size Enterprises Small and medium teams Startups Nonprofits By use case DevSecOps DevOps CI/CD View all use cases By industry Healthcare Financial services Manufacturing Government View all industries View all solutions Resources Topics AI DevOps Security Software Development View all Explore Learning Pathways Events & Webinars Ebooks & Whitepapers Customer Stories Partners Executive Insights Open Source GitHub Sponsors Fund open source developers The ReadME Project GitHub community articles Repositories Topics Trending Collections Enterprise Enterprise platform AI-powered developer platform Available add-ons GitHub Advanced Security Enterprise-grade security features Copilot for business Enterprise-grade AI features Premium Support Enterprise-grade 24/7 support Pricing Search or jump to... Search code, repositories, users, issues, pull requests... Search Clear Search syntax tips Provide feedback We read every piece of feedback, and take your input very seriously. Include my email address so I can be contacted Cancel Submit feedback Saved searches Use saved searches to filter your results more quickly Name Query To see all available qualifiers, see our documentation. Cancel Create saved search Sign in Sign up Reseting focus You signed in with another tab or window. Reload to refresh your session. You signed out in another tab or window. Reload to refresh your session. You switched accounts on another tab or window. Reload to refresh your session. Dismiss alert CompSciLauren / awesome-git-hooks Public Notifications You must be signed in to change notification settings Fork 51 Star 1k  A curated list of awesome git hooks License View license 1k stars 51 forks Branches Tags Activity Star Notifications You must be signed in to change notification settings Code Issues 11 Pull requests 9 Actions Projects 0 Security Insights Additional navigation options Code Issues Pull requests Actions Projects Security Insights CompSciLauren/awesome-git-hooks masterBranchesTagsGo to fileCodeFolders and filesNameNameLast commit messageLast commit dateLatest commit History94 Commits.github/ISSUE_TEMPLATE.github/ISSUE_TEMPLATE commit-msg-hookscommit-msg-hooks post-checkout-hookspost-checkout-hooks post-update-hookspost-update-hooks pre-commit-hookspre-commit-hooks pre-push-hookspre-push-hooks pre-rebase-hookspre-rebase-hooks prepare-commit-msg-hooksprepare-commit-msg-hooks query-watchman-hooksquery-watchman-hooks teststests update-hooksupdate-hooks .gitignore.gitignore .travis.yml.travis.yml CODE-OF-CONDUCT.mdCODE-OF-CONDUCT.md CONTRIBUTING.mdCONTRIBUTING.md LICENSELICENSE README.mdREADME.md bash-icon.pngbash-icon.png create-new-file.gifcreate-new-file.gif git-logo.pnggit-logo.png package-lock.jsonpackage-lock.json package.jsonpackage.json perl-icon.pngperl-icon.png prettier.config.jsprettier.config.js python-icon.pngpython-icon.png View all filesRepository files navigationREADMECode of conductLicense Awesome Git Hooks Awesome Git Hooks  Easy-to-use git hooks for automating tasks during git workflows. Git hooks are custom scripts you can use to automate tasks which are triggered before or after a git command is executed. There are two groups of these hooks: client-side and server-side. Client-side hooks are triggered by operations such as committing and merging, while server-side hooks run on network operations such as receiving pushed commits. This repo contains helpful resources as well as a variety of git hook scripts that can be easily customized to serve different purposes.  Nothing to install/download  Code is well-documented  Grab & go! Copy the code you want to use and paste into your .git/hooks folder Contributions are always welcome! Please see our Contribution Guidelines. Also, if you don't find the script you want below, you can create a new issue to request it. Contents Git Hook Scripts commit-msg post-checkout post-update pre-commit prepare-commit-msg pre-push pre-rebase query-watchman update Quick Start Tools Written Guides Video Guides Git Hook Scripts Note: The icon next to each script signifies what language it is written in. icon language bash python perl commit-msg enforce-insert-issue-number - Make sure user did not delete the ISSUE-[#] string that was generated by prepare-commit-msg/insert-issue-number.hook. post-checkout delete-pyc-files - Delete all .pyc files every time a new branch is checked out. new-branch-alert - Display a message when a new branch is checked out for the first time. post-update update-server-info - Prepare a packed repository for use over dumb transports (e.g. http). pre-commit dotenvx - Prevent committing your .env file(s) to code. format-code - Run command to format code and re-add any files modified after formatting. search-term - Fail commit if a specific term is found in the code. spell-check-md-files - Check files with .md extension for spelling errors. verify-name-and-email - Fail commit if user.name or user.email is incorrect. prepare-commit-msg include-git-diff-name-status - Include the output of "git diff --name-status -r" into the message, just before the "git status" output. insert-issue-number - Insert issue number to beginning of the commit message. pre-push prevent-bad-push - Prevent push of commits where the log message starts with "WIP" (work in progress). pre-rebase prevent-rebase - Prevent topic branches that are already merged to 'next' branch from getting rebased, because allowing it would result in rebasing already published history. query-watchman fsmonitor-watchman - Output to stdout all files that have been modified since a given time. update update - Block unannotated tags from entering. Quick Start Pick a hook, any hook! Try the "verify-name-and-email" one if you're not sure where to start. Navigate to your project's hooks folder (.git/hooks). You should see a list of files already in there. Create a new file called the exact commit type that you want to use (eg: "commit-msg", "pre-rebase", "pre-commit", etc). Do not give it an extension. Open your new file and paste the code from the hook you chose out of this repo (eg: verify-name-and-email.hook). Save file. Done! Now the git hook will be triggered automatically. Tools Husky - Manage git hooks with a nice user interface. Overcommit - A fully configurable and extendable git hook manager. Git Build Hook Maven Plugin - Install Git hooks and config during a Maven build. CaptainHook - Git hooks manager for PHP developers. pre-commit - A framework for managing and maintaining multi-language pre-commit hooks. Written Guides Git hooks documentation at git-scm.com Git Pro book by Scott Chacon and Ben Straub An Introduction to Git Hooks Atlassian Tutorial on Git Hooks Easy git hooks with husky Git Hooked How To Use Git Hooks To Automate Development and Deployment Tasks Automate Your Workflow with Git Hooks Using JavaScript in Your Git Hooks An In-Depth Look at Git Hooks Git hooks and practical uses. Yes, even on Windows. Automatically Manage Git Hooks with Direnv Video Guides Git Hooks Part 1 - Getting Started Git hooks and practical uses. Yes, even on Windows. License This work is licensed under a Creative Commons Attribution 1.0 International License. About  A curated list of awesome git hooks Topics git bash hooks automation awesome script awesome-list Resources Readme License View license Code of conduct Code of conduct Activity Stars 1k stars Watchers 14 watching Forks 51 forks Report repository Releases No releases published Packages 0 No packages published Contributors 11 Languages Shell 74.9% Perl 12.8% Python 11.5% JavaScript 0.8% Footer  2025 GitHub, Inc. Footer navigation Terms Privacy Security Status Docs Contact Manage cookies Do not share my personal information You cant perform that action at this time.